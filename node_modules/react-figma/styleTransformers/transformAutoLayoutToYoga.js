"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var layoutModeToFlexDirection = {
    HORIZONTAL: 'row',
    VERTICAL: 'column'
};
var layoutAlignToAlignSelf = {
    MIN: 'flex-start',
    CENTER: 'center',
    MAX: 'flex-end',
    STRETCH: 'stretch'
};
var constraintToJustifyContent = {
    MIN: 'flex-start',
    CENTER: 'center',
    MAX: 'flex-end',
    STRETCH: 'space-between'
};
var constraintToAlignItems = {
    MIN: 'flex-start',
    CENTER: 'center',
    MAX: 'flex-end',
    STRETCH: 'stretch'
};
exports.transformAutoLayoutToYoga = function (props) {
    return __assign({}, (props.layoutMode && layoutModeToFlexDirection[props.layoutMode]
        ? {
            flexDirection: layoutModeToFlexDirection[props.layoutMode]
        }
        : {}), (props.horizontalPadding
        ? {
            paddingLeft: props.horizontalPadding,
            paddingRight: props.horizontalPadding
        }
        : {}), (props.verticalPadding
        ? {
            paddingTop: props.verticalPadding,
            paddingBottom: props.verticalPadding
        }
        : {}), (props.layoutAlign && layoutAlignToAlignSelf[props.layoutAlign]
        ? {
            alignSelf: layoutAlignToAlignSelf[props.layoutAlign]
        }
        : {}), (props.constraints &&
        props.constraints.horizontal &&
        constraintToJustifyContent[props.constraints.horizontal]
        ? {
            justifyContent: constraintToJustifyContent[props.constraints.horizontal]
        }
        : {}), (props.constraints && props.constraints.vertical && constraintToAlignItems[props.constraints.vertical]
        ? {
            alignItems: constraintToAlignItems[props.constraints.vertical]
        }
        : {}));
};
//# sourceMappingURL=transformAutoLayoutToYoga.js.map